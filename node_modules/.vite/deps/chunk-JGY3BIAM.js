import {
  a,
  o,
  o3 as o2,
  r
} from "./chunk-22UN426J.js";

// node_modules/@tauri-apps/api/http-58a1c419.js
var i;
!function(t) {
  t[t.JSON = 1] = "JSON", t[t.Text = 2] = "Text", t[t.Binary = 3] = "Binary";
}(i || (i = {}));
var o3 = function() {
  function t(t2, e) {
    this.type = t2, this.payload = e;
  }
  return t.form = function(e) {
    var r2 = {};
    for (var n in e) {
      var i2 = e[n], o4 = void 0;
      o4 = "string" == typeof i2 ? i2 : i2 instanceof Uint8Array || Array.isArray(i2) ? Array.from(i2) : "string" == typeof i2.file ? { file: i2.file, mime: i2.mime, fileName: i2.fileName } : { file: Array.from(i2.file), mime: i2.mime, fileName: i2.fileName }, r2[n] = o4;
    }
    return new t("Form", r2);
  }, t.json = function(e) {
    return new t("Json", e);
  }, t.text = function(e) {
    return new t("Text", e);
  }, t.bytes = function(e) {
    return new t("Bytes", Array.from(e instanceof ArrayBuffer ? new Uint8Array(e) : e));
  }, t;
}();
var s = function(t) {
  this.url = t.url, this.status = t.status, this.ok = this.status >= 200 && this.status < 300, this.headers = t.headers, this.rawHeaders = t.rawHeaders, this.data = t.data;
};
var u = function() {
  function o4(t) {
    this.id = t;
  }
  return o4.prototype.drop = function() {
    return o(this, void 0, void 0, function() {
      return a(this, function(t) {
        return [2, o2({ __tauriModule: "Http", message: { cmd: "dropClient", client: this.id } })];
      });
    });
  }, o4.prototype.request = function(r2) {
    return o(this, void 0, void 0, function() {
      var t;
      return a(this, function(e) {
        return (t = !r2.responseType || r2.responseType === i.JSON) && (r2.responseType = i.Text), [2, o2({ __tauriModule: "Http", message: { cmd: "httpRequest", client: this.id, options: r2 } }).then(function(e2) {
          var r3 = new s(e2);
          if (t) {
            try {
              r3.data = JSON.parse(r3.data);
            } catch (t2) {
              if (r3.ok && "" === r3.data)
                r3.data = {};
              else if (r3.ok)
                throw Error("Failed to parse response `".concat(r3.data, "` as JSON: ").concat(t2, ";\n              try setting the `responseType` option to `ResponseType.Text` or `ResponseType.Binary` if the API does not return a JSON response."));
            }
            return r3;
          }
          return r3;
        })];
      });
    });
  }, o4.prototype.get = function(n, i2) {
    return o(this, void 0, void 0, function() {
      return a(this, function(t) {
        return [2, this.request(r({ method: "GET", url: n }, i2))];
      });
    });
  }, o4.prototype.post = function(n, i2, o5) {
    return o(this, void 0, void 0, function() {
      return a(this, function(t) {
        return [2, this.request(r({ method: "POST", url: n, body: i2 }, o5))];
      });
    });
  }, o4.prototype.put = function(n, i2, o5) {
    return o(this, void 0, void 0, function() {
      return a(this, function(t) {
        return [2, this.request(r({ method: "PUT", url: n, body: i2 }, o5))];
      });
    });
  }, o4.prototype.patch = function(n, i2) {
    return o(this, void 0, void 0, function() {
      return a(this, function(t) {
        return [2, this.request(r({ method: "PATCH", url: n }, i2))];
      });
    });
  }, o4.prototype.delete = function(n, i2) {
    return o(this, void 0, void 0, function() {
      return a(this, function(t) {
        return [2, this.request(r({ method: "DELETE", url: n }, i2))];
      });
    });
  }, o4;
}();
function a2(r2) {
  return o(this, void 0, void 0, function() {
    return a(this, function(t) {
      return [2, o2({ __tauriModule: "Http", message: { cmd: "createClient", options: r2 } }).then(function(t2) {
        return new u(t2);
      })];
    });
  });
}
var f = null;
function c(n, i2) {
  var o4;
  return o(this, void 0, void 0, function() {
    return a(this, function(t) {
      switch (t.label) {
        case 0:
          return null !== f ? [3, 2] : [4, a2()];
        case 1:
          f = t.sent(), t.label = 2;
        case 2:
          return [2, f.request(r({ url: n, method: null !== (o4 = null == i2 ? void 0 : i2.method) && void 0 !== o4 ? o4 : "GET" }, i2))];
      }
    });
  });
}
var d = Object.freeze({ __proto__: null, getClient: a2, fetch: c, Body: o3, Client: u, Response: s, get ResponseType() {
  return i;
} });

export {
  i,
  o3 as o,
  s,
  u,
  a2 as a,
  c,
  d
};
//# sourceMappingURL=chunk-JGY3BIAM.js.map
